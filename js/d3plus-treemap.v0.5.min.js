/*
  d3plus-treemap v0.5.20
  A reusable tree map built on D3
  Copyright (c) 2016 D3plus - https://d3plus.org
  @license MIT
*/
(function(t,e){typeof exports==="object"&&typeof module!=="undefined"?e(exports,require("d3-collection"),require("d3-hierarchy"),require("d3plus-common"),require("d3plus-shape"),require("d3plus-viz")):typeof define==="function"&&define.amd?define("d3plus-treemap",["exports","d3-collection","d3-hierarchy","d3plus-common","d3plus-shape","d3plus-viz"],e):e(t.d3plus=t.d3plus||{},t.d3Collection,t.d3Hierarchy,t.d3plusCommon,t.d3plusShape,t.d3plusViz)})(this,function(t,e,i,r,n,o){"use strict";var s=function(t){function o(){t.call(this);this._padding=1;this._shapeConfig=Object.assign({},this._shapeConfig,{fontResize:true});this._sort=function(t,e){return e.value-t.value};this._sum=r.accessor("value");this._tile=i.treemapSquarify;this._treemap=i.treemap().round(true)}if(t)o.__proto__=t;o.prototype=Object.create(t&&t.prototype);o.prototype.constructor=o;o.prototype.render=function o(s){var a=this;t.prototype.render.call(this,s);var u=e.nest();for(var h=0;h<=this._drawDepth;h++)u.key(a._groupBy[h]);u=u.entries(this._filteredData);var d=this._treemap.padding(this._padding).size([this._width-this._margin.left-this._margin.right,this._height-this._margin.top-this._margin.bottom]).tile(this._tile)(i.hierarchy({values:u},function(t){return t.values}).sum(this._sum).sort(this._sort));var p=[],l=this;function c(t){for(var e=0;e<t.length;e++){var i=t[e];if(i.depth<=l._drawDepth)c(i.children);else{i.id=i.data.key;i.data=r.merge(i.data.values);p.push(i)}}}if(d.children)c(d.children);var f=d.value;var _=this._shapeConfig,m={};var y=function(t){if(t!=="labelBounds"&&{}.hasOwnProperty.call(_,t)){if(typeof _[t]==="function")m[t]=function(e,i){return _[t](e.data,i)};else m[t]=_[t]}};for(var g in _)y(g);var v="translate("+this._margin.left+", "+this._margin.top+")";this._shapes.push((new n.Rect).config({on:Object.keys(this._on).filter(function(t){return!t.includes(".")||t.includes(".shape")}).reduce(function(t,e){t[e]=function(t,i){return a._on[e]?a._on[e](t.data,i):null};return t},{})}).data(p).duration(this._duration).height(function(t){return t.y1-t.y0}).label(function(t,e){return[a._drawLabel(t.data,e),Math.round(a._sum(t.data,e)/f*100)+"%"]}).labelBounds(function(t,e,i){var r=i.height;var n=Math.min(50,r*.25);return[{width:i.width,height:r-n,x:-i.width/2,y:-r/2},{width:i.width,height:n,x:-i.width/2,y:r/2-n}]}).select(r.elem("g.d3plus-Treemap",{parent:this._select,enter:{transform:v},update:{transform:v}}).node()).textAnchor(["start","middle"]).verticalAlign(["top","bottom"]).width(function(t){return t.x1-t.x0}).x(function(t){return t.x0+(t.x1-t.x0)/2}).y(function(t){return t.y0+(t.y1-t.y0)/2}).config(m).render());return this};o.prototype.padding=function t(e){return arguments.length?(this._padding=typeof e==="function"?e:r.constant(e),this):this._padding};o.prototype.sort=function t(e){return arguments.length?(this._sort=e,this):this._sort};o.prototype.sum=function t(e){return arguments.length?(this._sum=typeof e==="function"?e:r.constant(e),this):this._sum};o.prototype.tile=function t(e){return arguments.length?(this._tile=e,this):this._tile};return o}(o.Viz);t.Treemap=s;Object.defineProperty(t,"__esModule",{value:true})});