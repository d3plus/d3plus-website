/*
  d3plus-react v0.2.29
  React components for d3plus visualizations.
  Copyright (c) 2018 D3plus - https://d3plus.org
  @license MIT
*/
if(typeof Object.assign!=="function"){Object.defineProperty(Object,"assign",{value:function t(e){"use strict";if(e===null){throw new TypeError("Cannot convert undefined or null to object")}var r=Object(e);for(var o=1;o<arguments.length;o++){var p=arguments[o];if(p!==null){for(var n in p){if(Object.prototype.hasOwnProperty.call(p,n)){r[n]=p[n]}}}}return r},writable:true,configurable:true})}if(!Array.prototype.includes){Object.defineProperty(Array.prototype,"includes",{value:function t(e,r){var o=Object(this);var p=o.length>>>0;if(p===0)return false;var n=r|0;var a=Math.max(n>=0?n:p-Math.abs(n),0);function i(t,e){return t===e||typeof t==="number"&&typeof e==="number"&&isNaN(t)&&isNaN(e)}while(a<p){if(i(o[a],e)){return true}a++}return false}})}(function(t,e){typeof exports==="object"&&typeof module!=="undefined"?e(exports,require("react"),require("prop-types"),require("d3plus-common"),require("d3plus-plot"),require("d3plus-hierarchy"),require("d3plus-geomap"),require("d3plus-network"),require("d3plus-priestley")):typeof define==="function"&&define.amd?define("d3plus-react",["exports","react","prop-types","d3plus-common","d3plus-plot","d3plus-hierarchy","d3plus-geomap","d3plus-network","d3plus-priestley"],e):e(t.d3plus={},t.React,t.PropTypes,t.d3plusCommon,t.d3plusPlot,t.d3plusHierarchy,t.d3plusGeomap,t.d3plusNetwork,t.d3plusPriestley)})(this,function(t,e,r,o,p,n,a,i,s){"use strict";var u="default"in e?e["default"]:e;r=r&&r.hasOwnProperty("default")?r["default"]:r;var c=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;e.prototype.componentDidMount=function t(){var e=this.props;var r=e.type;this.viz=(new r).select(this.container);this.renderViz.bind(this)()};e.prototype.componentDidUpdate=function t(e){var r=this.context.d3plus||{};var p=this.props;var n=p.config;var a=p.forceUpdate;var i=o.assign({},r,n);var s=o.assign({},r,e.config);var u=a?false:JSON.stringify(i)===JSON.stringify(s);if(!u){this.renderViz.bind(this)()}};e.prototype.renderViz=function t(){var e=this;var r=e.viz;var p=this.props;var n=p.config;var a=p.dataFormat;var i=this.context.d3plus||{};var s=o.assign({},i,n);if(a&&s.data){r.config(s).data(s.data,a)}else{r.config(s)}r.render()};e.prototype.render=function t(){var e=this;var r=this.props;var o=r.className;return u.createElement("div",{className:o,ref:function(t){return e.container=t}})};return e}(e.Component);c.contextTypes={d3plus:r.object};c.defaultProps={className:"viz",forceUpdate:false};var f=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);f.defaultProps=Object.assign({},c.defaultProps,{type:p.AreaPlot});var l=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);l.defaultProps=Object.assign({},c.defaultProps,{type:p.BarChart});var y=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);y.defaultProps=Object.assign({},c.defaultProps,{type:n.Donut});var d=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);d.defaultProps=Object.assign({},c.defaultProps,{type:a.Geomap});var _=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);_.defaultProps=Object.assign({},c.defaultProps,{type:p.LinePlot});var v=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);v.defaultProps=Object.assign({},c.defaultProps,{type:i.Network});var h=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);h.defaultProps=Object.assign({},c.defaultProps,{type:n.Pie});var b=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);b.defaultProps=Object.assign({},c.defaultProps,{type:p.Plot});var P=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);P.defaultProps=Object.assign({},c.defaultProps,{type:s.Priestley});var O=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);O.defaultProps=Object.assign({},c.defaultProps,{type:p.StackedArea});var j=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);j.defaultProps=Object.assign({},c.defaultProps,{type:n.Tree});var g=function(t){function e(){t.apply(this,arguments)}if(t)e.__proto__=t;e.prototype=Object.create(t&&t.prototype);e.prototype.constructor=e;return e}(c);g.defaultProps=Object.assign({},c.defaultProps,{type:n.Treemap});t.AreaPlot=f;t.BarChart=l;t.Donut=y;t.Geomap=d;t.LinePlot=_;t.Network=v;t.Pie=h;t.Plot=b;t.Priestley=P;t.StackedArea=O;t.Tree=j;t.Treemap=g;Object.defineProperty(t,"__esModule",{value:true})});