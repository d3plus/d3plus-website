/*
  d3plus-geomap v0.5.0
  A reusable geo map built on D3 and Topojson
  Copyright (c) 2018 D3plus - https://d3plus.org
  @license MIT
*/
if(typeof Object.assign!=="function"){Object.defineProperty(Object,"assign",{value:function t(e){"use strict";if(e===null){throw new TypeError("Cannot convert undefined or null to object")}var i=Object(e);for(var o=1;o<arguments.length;o++){var r=arguments[o];if(r!==null){for(var n in r){if(Object.prototype.hasOwnProperty.call(r,n)){i[n]=r[n]}}}}return i},writable:true,configurable:true})}if(!Array.prototype.includes){Object.defineProperty(Array.prototype,"includes",{value:function t(e,i){var o=Object(this);var r=o.length>>>0;if(r===0)return false;var n=i|0;var s=Math.max(n>=0?n:r-Math.abs(n),0);function a(t,e){return t===e||typeof t==="number"&&typeof e==="number"&&isNaN(t)&&isNaN(e)}while(s<r){if(a(o[s],e)){return true}s++}return false}})}(function(t,e){typeof exports==="object"&&typeof module!=="undefined"?e(exports,require("d3-array"),require("d3-color"),require("d3-geo"),require("d3-scale"),require("d3-tile"),require("topojson-client"),require("d3plus-common"),require("d3plus-shape"),require("d3plus-viz")):typeof define==="function"&&define.amd?define("d3plus-geomap",["exports","d3-array","d3-color","d3-geo","d3-scale","d3-tile","topojson-client","d3plus-common","d3plus-shape","d3plus-viz"],e):e(t.d3plus={},t.d3Array,t.d3Color,t.d3Geo,t.scales,t.d3Tile,t.topojsonClient,t.d3plusCommon,t.d3plusShape,t.d3plusViz)})(this,function(t,M,r,A,F,e,o,w,P,n){"use strict";function q(t,e){var i=e&&t.objects[e]?e:Object.keys(t.objects)[0];return o.feature(t,t.objects[i])}var i=function(O){function t(){var o=this;O.call(this);this._fitObject=false;this._ocean="#cdd1d3";this._padding=20;this._point=w.accessor("point");this._pointSize=w.constant(1);this._pointSizeMax=10;this._pointSizeMin=5;this._pointSizeScale="linear";this._projection=A.geoMercator();this._rotate=[0,0];this._shape=w.constant("Circle");this._shapeConfig=w.assign(this._shapeConfig,{hoverOpacity:1,Path:{fill:function(t){if(o._colorScale&&!o._coordData.features.includes(t)){var e=o._colorScale(t);if(e!==undefined&&e!==null){return o._colorScaleClass._colorScale(e)}}return"#f5f5f3"},on:{mouseenter:function(t){return!o._coordData.features.includes(t)?o._on.mouseenter.bind(o)(t):null},"mousemove.shape":function(t){return!o._coordData.features.includes(t)?o._on["mousemove.shape"].bind(o)(t):null},mouseleave:function(t){return!o._coordData.features.includes(t)?o._on.mouseleave.bind(o)(t):null}},stroke:function(t,e){var i=typeof o._shapeConfig.Path.fill==="function"?o._shapeConfig.Path.fill(t,e):o._shapeConfig.Path.fill;return r.color(i).darker()},strokeWidth:1}});this._tiles=true;this._tileGen=e.tile().wrap(false);this._tileUrl="https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}@2x.png";this._topojson=false;this._topojsonFilter=function(t){return!["010"].includes(t.id)};this._topojsonId=w.accessor("id");this._zoom=true;this._zoomSet=false}if(O)t.__proto__=O;t.prototype=Object.create(O&&O.prototype);t.prototype.constructor=t;t.prototype._renderTiles=function t(e,i){var o=this;if(i===void 0)i=0;var r=[];if(this._tiles){r=this._tileGen.extent(this._zoomBehavior.translateExtent()).scale(this._projection.scale()*(2*Math.PI)*e.k).translate(e.apply(this._projection.translate()))();this._tileGroup.transition().duration(i).attr("transform",e)}var n=this._tileGroup.selectAll("image.tile").data(r,function(t){return t.x+"-"+t.y+"-"+t.z});n.exit().transition().duration(i).attr("opacity",0).remove();var s=r.scale/e.k;n.enter().append("image").attr("class","tile").attr("opacity",0).attr("xlink:href",function(t){return o._tileUrl.replace("{s}",["a","b","c"][Math.random()*3|0]).replace("{z}",t.z).replace("{x}",t.x).replace("{y}",t.y)}).attr("width",s).attr("height",s).attr("x",function(t){return t.x*s+r.translate[0]*s-e.x/e.k}).attr("y",function(t){return t.y*s+r.translate[1]*s-e.y/e.k}).transition().duration(i).attr("opacity",1)};t.prototype._draw=function t(e){var o=this;O.prototype._draw.call(this,e);var i=this._height-this._margin.top-this._margin.bottom,r=this._width-this._margin.left-this._margin.right;this._container=this._select.selectAll("svg.d3plus-geomap").data([0]);this._container=this._container.enter().append("svg").attr("class","d3plus-geomap").attr("opacity",0).attr("width",r).attr("height",i).attr("x",this._margin.left).attr("y",this._margin.top).style("background-color",this._ocean||"transparent").merge(this._container);this._container.transition(this._transition).attr("opacity",1).attr("width",r).attr("height",i).attr("x",this._margin.left).attr("y",this._margin.top);var n=this._container.selectAll("rect.d3plus-geomap-ocean").data([0]);n.enter().append("rect").attr("class","d3plus-geomap-ocean").merge(n).attr("width",r).attr("height",i).attr("fill",this._ocean||"transparent");this._tileGroup=this._container.selectAll("g.d3plus-geomap-tileGroup").data([0]);this._tileGroup=this._tileGroup.enter().append("g").attr("class","d3plus-geomap-tileGroup").merge(this._tileGroup);this._zoomGroup=this._container.selectAll("g.d3plus-geomap-zoomGroup").data([0]);this._zoomGroup=this._zoomGroup.enter().append("g").attr("class","d3plus-geomap-zoomGroup").merge(this._zoomGroup);var s=this._zoomGroup.selectAll("g.d3plus-geomap-paths").data([0]);s=s.enter().append("g").attr("class","d3plus-geomap-paths").merge(s);var a=this._coordData=this._topojson?q(this._topojson,this._topojsonKey):{type:"FeatureCollection",features:[]};if(this._topojsonFilter){a.features=a.features.filter(this._topojsonFilter)}var p=this._path=A.geoPath().projection(this._projection);var u=this._filteredData.filter(function(t,e){return o._point(t,e)instanceof Array});var l=this._filteredData.filter(function(t,e){return!(o._point(t,e)instanceof Array)}).reduce(function(t,e){t[o._id(e)]=e;return t},{});var c=a.features.reduce(function(t,e){var i=o._topojsonId(e);t.push({__d3plus__:true,data:l[i],feature:e,id:i});return t},[]);var h=F["scale"+this._pointSizeScale.charAt(0).toUpperCase()+this._pointSizeScale.slice(1)]().domain(M.extent(u,function(t,e){return o._pointSize(t,e)})).range([this._pointSizeMin,this._pointSizeMax]);if(!this._zoomSet){var f=this._fitObject?q(this._fitObject,this._fitKey):a;var d={type:"FeatureCollection",features:this._fitFilter?f.features.filter(this._fitFilter):f.features.slice()};d.features=d.features.reduce(function(t,e){if(e.geometry){var i={type:e.type,id:e.id,geometry:{coordinates:e.geometry.coordinates,type:e.geometry.type}};if(e.geometry.coordinates.length>1){var o=[],r=[];e.geometry.coordinates.forEach(function(t){i.geometry.coordinates=[t];o.push(p.area(i))});i.geometry.coordinates=[e.geometry.coordinates[o.indexOf(M.max(o))]];var n=p.centroid(i);e.geometry.coordinates.forEach(function(t){i.geometry.coordinates=[t];r.push(P.pointDistance(p.centroid(i),n))});var s=M.quantile(o.reduce(function(t,e,i){if(e){t.push(o[i]/e)}return t},[]),.9);i.geometry.coordinates=e.geometry.coordinates.filter(function(t,e){var i=r[e];return i===0||o[e]/i>=s})}t.push(i)}return t},[]);var _=this._padding;if(typeof _==="string"){_=_.match(/([-\d\.]+)/g).map(Number);if(_.length===3){_.push(_[1])}if(_.length===2){_=_.concat(_)}if(_.length===1){_=Array(4).fill(_)}}else{_=Array(4).fill(_)}if(!d.features.length&&u.length){var g=[[undefined,undefined],[undefined,undefined]];u.forEach(function(t,e){var i=o._projection(o._point(t,e));if(g[0][0]===void 0||i[0]<g[0][0]){g[0][0]=i[0]}if(g[1][0]===void 0||i[0]>g[1][0]){g[1][0]=i[0]}if(g[0][1]===void 0||i[1]<g[0][1]){g[0][1]=i[1]}if(g[1][1]===void 0||i[1]>g[1][1]){g[1][1]=i[1]}});d={type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"MultiPoint",coordinates:g.map(function(t){return o._projection.invert(t)})}}]};var y=M.max(u,function(t,e){return h(o._pointSize(t,e))});_=_.map(function(t){return t+y})}this._projection=this._projection.fitExtent(d.features.length?[[_[3],_[0]],[r-_[1]*2,i-_[2]*2]]:[[0,0],[r,i]],d.features.length?d:{type:"Sphere"});this._zoomBehavior.extent([[0,0],[r,i]]).scaleExtent([1,this._zoomMax]).translateExtent([[0,0],[r,i]]);this._zoomSet=true}this._shapes.push((new P.Path).data(c).d(function(t){return p(t.feature)}).select(s.node()).x(0).y(0).config(w.configPrep.bind(this)(this._shapeConfig,"shape","Path")).render());var m=this._zoomGroup.selectAll("g.d3plus-geomap-pins").data([0]);m=m.enter().append("g").attr("class","d3plus-geomap-pins").merge(m);var v=(new P.Circle).config(w.configPrep.bind(this)(this._shapeConfig,"shape","Circle")).data(u).r(function(t,e){return h(o._pointSize(t,e))}).select(m.node()).sort(function(t,e){return o._pointSize(e)-o._pointSize(t)}).x(function(t,e){return o._projection(o._point(t,e))[0]}).y(function(t,e){return o._projection(o._point(t,e))[1]});var j=Object.keys(this._on);var z=j.filter(function(t){return t.includes(".Circle")}),b=j.filter(function(t){return!t.includes(".")}),x=j.filter(function(t){return t.includes(".shape")});for(var S=0;S<b.length;S++){v.on(b[S],o._on[b[S]])}for(var C=0;C<x.length;C++){v.on(x[C],o._on[x[C]])}for(var G=0;G<z.length;G++){v.on(z[G],o._on[z[G]])}this._shapes.push(v.render());return this};t.prototype.fitFilter=function t(e){if(arguments.length){if(typeof e==="function"){return this._fitFilter=e,this}if(!(e instanceof Array)){e=[e]}return this._fitFilter=function(t){return e.includes(t.id)},this}return this._fitFilter};t.prototype.fitKey=function t(e){return arguments.length?(this._fitKey=e,this):this._fitKey};t.prototype.fitObject=function t(e,i){return arguments.length?(this._queue.push([n.dataLoad.bind(this),e,i,"fitObject"]),this):this._fitObject};t.prototype.ocean=function t(e){return arguments.length?(this._ocean=e,this):this._ocean};t.prototype.padding=function t(e){return arguments.length?(this._padding=e,this):this._padding};t.prototype.point=function t(e){return arguments.length?(this._point=typeof e==="function"?e:w.constant(e),this):this._point};t.prototype.pointSize=function t(e){return arguments.length?(this._pointSize=typeof e==="function"?e:w.constant(e),this):this._pointSize};t.prototype.pointSizeMax=function t(e){return arguments.length?(this._pointSizeMax=e,this):this._pointSizeMax};t.prototype.pointSizeMin=function t(e){return arguments.length?(this._pointSizeMin=e,this):this._pointSizeMin};t.prototype.projection=function t(e){if(arguments.length&&e!=="geoMercator"){this._tiles=false}return arguments.length?(this._projection=typeof e==="string"?A[e]():e,this):this._projection};t.prototype.tiles=function t(e){return arguments.length?(this._tiles=e,this):this._tiles};t.prototype.tileUrl=function t(e){return arguments.length?(this._tileUrl=e,this):this._tileUrl};t.prototype.topojson=function t(e,i){return arguments.length?(this._queue.push([n.dataLoad.bind(this),e,i,"topojson"]),this):this._topojson};t.prototype.topojsonFilter=function t(e){if(arguments.length){if(typeof e==="function"){return this._topojsonFilter=e,this}if(!(e instanceof Array)){e=[e]}return this._topojsonFilter=function(t){return e.includes(t.id)},this}return this._topojsonFilter};t.prototype.topojsonKey=function t(e){return arguments.length?(this._topojsonKey=e,this):this._topojsonKey};t.prototype.topojsonId=function t(e){return arguments.length?(this._topojsonId=typeof e==="function"?e:w.accessor(e),this):this._topojsonId};return t}(n.Viz);t.Geomap=i;Object.defineProperty(t,"__esModule",{value:true})});