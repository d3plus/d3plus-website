/*
  d3plus-geomap v0.4.19
  A reusable geo map built on D3 and Topojson
  Copyright (c) 2018 D3plus - https://d3plus.org
  @license MIT
*/
if(typeof Object.assign!=="function"){Object.defineProperty(Object,"assign",{value:function t(e){"use strict";if(e===null){throw new TypeError("Cannot convert undefined or null to object")}var i=Object(e);for(var o=1;o<arguments.length;o++){var n=arguments[o];if(n!==null){for(var r in n){if(Object.prototype.hasOwnProperty.call(n,r)){i[r]=n[r]}}}}return i},writable:true,configurable:true})}if(!Array.prototype.includes){Object.defineProperty(Array.prototype,"includes",{value:function t(e,i){var o=Object(this);var n=o.length>>>0;if(n===0)return false;var r=i|0;var s=Math.max(r>=0?r:n-Math.abs(r),0);function a(t,e){return t===e||typeof t==="number"&&typeof e==="number"&&isNaN(t)&&isNaN(e)}while(s<n){if(a(o[s],e)){return true}s++}return false}})}(function(t,e){typeof exports==="object"&&typeof module!=="undefined"?e(exports,require("d3-array"),require("d3-color"),require("d3-geo"),require("d3-scale"),require("d3-tile"),require("topojson-client"),require("d3plus-common"),require("d3plus-shape"),require("d3plus-viz")):typeof define==="function"&&define.amd?define("d3plus-geomap",["exports","d3-array","d3-color","d3-geo","d3-scale","d3-tile","topojson-client","d3plus-common","d3plus-shape","d3plus-viz"],e):e(t.d3plus={},t.d3Array,t.d3Color,t.d3Geo,t.scales,t.d3Tile,t.topojsonClient,t.d3plusCommon,t.d3plusShape,t.d3plusViz)})(this,function(t,e,i,o,n,r,s,a,p,u){"use strict";function l(t,e){var i=e&&t.objects[e]?e:Object.keys(t.objects)[0];return s.feature(t,t.objects[i])}var c=function(t){function s(){var e=this;t.call(this);this._fitObject=false;this._ocean="#cdd1d3";this._padding=20;this._point=a.accessor("point");this._pointSize=a.constant(1);this._pointSizeMax=10;this._pointSizeMin=5;this._pointSizeScale="linear";this._projection=o.geoMercator();this._rotate=[0,0];this._shape=a.constant("Circle");this._shapeConfig=a.assign(this._shapeConfig,{Path:{fill:function(t){if(e._colorScale&&!e._coordData.features.includes(t)){var i=e._colorScale(t);if(i!==undefined&&i!==null){return e._colorScaleClass._colorScale(i)}}return"#f5f5f3"},on:{mouseenter:function(t){return!e._coordData.features.includes(t)?e._on.mouseenter.bind(e)(t):null},"mousemove.shape":function(t){return!e._coordData.features.includes(t)?e._on["mousemove.shape"].bind(e)(t):null},mouseleave:function(t){return!e._coordData.features.includes(t)?e._on.mouseleave.bind(e)(t):null}},stroke:function(t,o){var n=typeof e._shapeConfig.Path.fill==="function"?e._shapeConfig.Path.fill(t,o):e._shapeConfig.Path.fill;return i.color(n).darker()},strokeWidth:1}});this._tiles=true;this._tileGen=r.tile().wrap(false);this._tileUrl="https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}@2x.png";this._topojson=false;this._topojsonFilter=function(t){return!["010"].includes(t.id)};this._topojsonId=a.accessor("id");this._zoom=true;this._zoomSet=false}if(t)s.__proto__=t;s.prototype=Object.create(t&&t.prototype);s.prototype.constructor=s;s.prototype._renderTiles=function t(e,i){var o=this;if(i===void 0)i=0;var n=[];if(this._tiles){n=this._tileGen.extent(this._zoomBehavior.translateExtent()).scale(this._projection.scale()*(2*Math.PI)*e.k).translate(e.apply(this._projection.translate()))();this._tileGroup.transition().duration(i).attr("transform",e)}var r=this._tileGroup.selectAll("image.tile").data(n,function(t){return t.x+"-"+t.y+"-"+t.z});r.exit().transition().duration(i).attr("opacity",0).remove();var s=n.scale/e.k;r.enter().append("image").attr("class","tile").attr("opacity",0).attr("xlink:href",function(t){return o._tileUrl.replace("{s}",["a","b","c"][Math.random()*3|0]).replace("{z}",t.z).replace("{x}",t.x).replace("{y}",t.y)}).attr("width",s).attr("height",s).attr("x",function(t){return t.x*s+n.translate[0]*s-e.x/e.k}).attr("y",function(t){return t.y*s+n.translate[1]*s-e.y/e.k}).transition().duration(i).attr("opacity",1)};s.prototype._draw=function i(r){var s=this;t.prototype._draw.call(this,r);var u=this._height-this._margin.top-this._margin.bottom,c=this._width-this._margin.left-this._margin.right;this._container=this._select.selectAll("svg.d3plus-geomap").data([0]);this._container=this._container.enter().append("svg").attr("class","d3plus-geomap").attr("opacity",0).attr("width",c).attr("height",u).attr("x",this._margin.left).attr("y",this._margin.top).style("background-color",this._ocean||"transparent").merge(this._container);this._container.transition(this._transition).attr("opacity",1).attr("width",c).attr("height",u).attr("x",this._margin.left).attr("y",this._margin.top);var h=this._container.selectAll("rect.d3plus-geomap-ocean").data([0]);h.enter().append("rect").attr("class","d3plus-geomap-ocean").merge(h).attr("width",c).attr("height",u).attr("fill",this._ocean||"transparent");this._tileGroup=this._container.selectAll("g.d3plus-geomap-tileGroup").data([0]);this._tileGroup=this._tileGroup.enter().append("g").attr("class","d3plus-geomap-tileGroup").merge(this._tileGroup);this._zoomGroup=this._container.selectAll("g.d3plus-geomap-zoomGroup").data([0]);this._zoomGroup=this._zoomGroup.enter().append("g").attr("class","d3plus-geomap-zoomGroup").merge(this._zoomGroup);var f=this._zoomGroup.selectAll("g.d3plus-geomap-paths").data([0]);f=f.enter().append("g").attr("class","d3plus-geomap-paths").merge(f);var d=this._coordData=this._topojson?l(this._topojson,this._topojsonKey):{type:"FeatureCollection",features:[]};if(this._topojsonFilter){d.features=d.features.filter(this._topojsonFilter)}var _=this._path=o.geoPath().projection(this._projection);var g=this._filteredData.filter(function(t,e){return s._point(t,e)instanceof Array});var y=this._filteredData.filter(function(t,e){return!(s._point(t,e)instanceof Array)}).reduce(function(t,e){t[s._id(e)]=e;return t},{});var m=d.features.reduce(function(t,e){var i=s._topojsonId(e);t.push({__d3plus__:true,data:y[i],feature:e,id:i});return t},[]);var v=n["scale"+this._pointSizeScale.charAt(0).toUpperCase()+this._pointSizeScale.slice(1)]().domain(e.extent(g,function(t,e){return s._pointSize(t,e)})).range([this._pointSizeMin,this._pointSizeMax]);if(!this._zoomSet){var j=this._fitObject?l(this._fitObject,this._fitKey):d;var z={type:"FeatureCollection",features:this._fitFilter?j.features.filter(this._fitFilter):j.features.slice()};z.features=z.features.reduce(function(t,i){var o={type:i.type,id:i.id,geometry:{coordinates:i.geometry.coordinates,type:i.geometry.type}};if(i.geometry.coordinates.length>1){var n=[],r=[];i.geometry.coordinates.forEach(function(t){o.geometry.coordinates=[t];n.push(_.area(o))});o.geometry.coordinates=[i.geometry.coordinates[n.indexOf(e.max(n))]];var s=_.centroid(o);i.geometry.coordinates.forEach(function(t){o.geometry.coordinates=[t];r.push(p.pointDistance(_.centroid(o),s))});var a=e.quantile(n.reduce(function(t,e,i){if(e){t.push(n[i]/e)}return t},[]),.9);o.geometry.coordinates=i.geometry.coordinates.filter(function(t,e){var i=r[e];return i===0||n[e]/i>=a})}t.push(o);return t},[]);var b=this._padding;if(typeof b==="string"){b=b.match(/([-\d\.]+)/g).map(Number);if(b.length===3){b.push(b[1])}if(b.length===2){b=b.concat(b)}if(b.length===1){b=Array(4).fill(b)}}else{b=Array(4).fill(b)}if(!z.features.length&&g.length){var x=[[undefined,undefined],[undefined,undefined]];g.forEach(function(t,e){var i=s._projection(s._point(t,e));if(x[0][0]===void 0||i[0]<x[0][0]){x[0][0]=i[0]}if(x[1][0]===void 0||i[0]>x[1][0]){x[1][0]=i[0]}if(x[0][1]===void 0||i[1]<x[0][1]){x[0][1]=i[1]}if(x[1][1]===void 0||i[1]>x[1][1]){x[1][1]=i[1]}});z={type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"MultiPoint",coordinates:x.map(function(t){return s._projection.invert(t)})}}]};var S=e.max(g,function(t,e){return v(s._pointSize(t,e))});b=b.map(function(t){return t+S})}this._projection=this._projection.fitExtent(z.features.length?[[b[3],b[0]],[c-b[1]*2,u-b[2]*2]]:[[0,0],[c,u]],z.features.length?z:{type:"Sphere"});this._zoomBehavior.extent([[0,0],[c,u]]).scaleExtent([1,this._zoomMax]).translateExtent([[0,0],[c,u]]);this._zoomSet=true}this._shapes.push((new p.Path).data(m).d(function(t){return _(t.feature)}).select(f.node()).x(0).y(0).config(a.configPrep.bind(this)(this._shapeConfig,"shape","Path")).render());var C=this._zoomGroup.selectAll("g.d3plus-geomap-pins").data([0]);C=C.enter().append("g").attr("class","d3plus-geomap-pins").merge(C);var G=(new p.Circle).config(a.configPrep.bind(this)(this._shapeConfig,"shape","Circle")).data(g).r(function(t,e){return v(s._pointSize(t,e))}).select(C.node()).sort(function(t,e){return s._pointSize(e)-s._pointSize(t)}).x(function(t,e){return s._projection(s._point(t,e))[0]}).y(function(t,e){return s._projection(s._point(t,e))[1]});var M=Object.keys(this._on);var O=M.filter(function(t){return t.includes(".Circle")}),A=M.filter(function(t){return!t.includes(".")}),F=M.filter(function(t){return t.includes(".shape")});for(var w=0;w<A.length;w++){G.on(A[w],s._on[A[w]])}for(var P=0;P<F.length;P++){G.on(F[P],s._on[F[P]])}for(var q=0;q<O.length;q++){G.on(O[q],s._on[O[q]])}this._shapes.push(G.render());return this};s.prototype.fitFilter=function t(e){if(arguments.length){if(typeof e==="function"){return this._fitFilter=e,this}if(!(e instanceof Array)){e=[e]}return this._fitFilter=function(t){return e.includes(t.id)},this}return this._fitFilter};s.prototype.fitKey=function t(e){return arguments.length?(this._fitKey=e,this):this._fitKey};s.prototype.fitObject=function t(e,i){return arguments.length?(this._queue.push([u.dataLoad.bind(this),e,i,"fitObject"]),this):this._fitObject};s.prototype.ocean=function t(e){return arguments.length?(this._ocean=e,this):this._ocean};s.prototype.padding=function t(e){return arguments.length?(this._padding=e,this):this._padding};s.prototype.point=function t(e){return arguments.length?(this._point=typeof e==="function"?e:a.constant(e),this):this._point};s.prototype.pointSize=function t(e){return arguments.length?(this._pointSize=typeof e==="function"?e:a.constant(e),this):this._pointSize};s.prototype.pointSizeMax=function t(e){return arguments.length?(this._pointSizeMax=e,this):this._pointSizeMax};s.prototype.pointSizeMin=function t(e){return arguments.length?(this._pointSizeMin=e,this):this._pointSizeMin};s.prototype.projection=function t(e){if(arguments.length&&e!=="geoMercator"){this._tiles=false}return arguments.length?(this._projection=typeof e==="string"?o[e]():e,this):this._projection};s.prototype.tiles=function t(e){return arguments.length?(this._tiles=e,this):this._tiles};s.prototype.tileUrl=function t(e){return arguments.length?(this._tileUrl=e,this):this._tileUrl};s.prototype.topojson=function t(e,i){return arguments.length?(this._queue.push([u.dataLoad.bind(this),e,i,"topojson"]),this):this._topojson};s.prototype.topojsonFilter=function t(e){if(arguments.length){if(typeof e==="function"){return this._topojsonFilter=e,this}if(!(e instanceof Array)){e=[e]}return this._topojsonFilter=function(t){return e.includes(t.id)},this}return this._topojsonFilter};s.prototype.topojsonKey=function t(e){return arguments.length?(this._topojsonKey=e,this):this._topojsonKey};s.prototype.topojsonId=function t(e){return arguments.length?(this._topojsonId=typeof e==="function"?e:a.accessor(e),this):this._topojsonId};return s}(u.Viz);t.Geomap=c;Object.defineProperty(t,"__esModule",{value:true})});